;; define some variables
;; time
(defpoll clock_time :interval "5s" "date '+%H:%M'")
(defvar eww "eww -c $HOME/.config/eww/eww")
(defvar vol_reveal false)
(defvar br_reveal false)
(defpoll volume :interval "1s" "scripts/audio")
(defpoll memory :interval "1s" "scripts/memory --get_p")
(defpoll memory_perc :interval "1s" "scripts/memory --mem")
(defpoll temperature :interval "1s" "scripts/temperature")
;; define window

(defwindow status_bar
	:monitor 0
    :windowtype "dock"
	:wm-ignore false
	:geometry (geometry :width  "100%" 
						:height "20px"
						:anchor "top center")
	:stacking "fg"
	:reserve (struts :distance "20px"
                     :side     "top")
(main_widget_bar))

;; Define the main container of widgets
(defwidget main_widget_bar []
    (box :class "main_widget_bar"
         :space-evenly true
         :orientation "h"
(left_widgets)))

;; Container of widgets from left side
(defwidget left_widgets []
  (box :class "left_modules"
       :orientation "h"
       :halign "end"
       :space-evenly false
(temperature_module)
(memory_module)
(volume_module)
(clock_module)))

;; CLOCK
(defwidget clock_module []
	(box :class "box_clock_module"
         :halign "end"
    (label :class "icon" :text "ó°ƒ°")
	(label :text clock_time)))

;; MEMORY
(defwidget memory_module []
    (box :class "box_memory"
         :halign "end"
         :tooltip memory_perc
    (label :text "Mem:") 
    (label :text memory)))



;(defwindow showvol 
;  :stacking "fg"
;  :wm-ignore true
;  :geometry (geometry :width "600px"
;              :height "50px")
;  (volume_module))



;; VOLUME
(defwidget volume_module []
    (box :class "bx_vol" :orientation "h"
         :space-evenly "false"
         :spacing 5
         :tooltip volume
    (label :text "Vol:")
    (scale :class "volbar" 
           
           :max 101 
           :min 0 
           :width 100 
           :round-digits "int" 
           :value volume 
           :active true 
           :onchange "pactl set-sink-volume 0 {}%" 
           :orientation "h")))


(defwidget temperature_module []
    (box :class "box_temperature"
         :halign "end"
         ;;:tooltip "${get_volume}"
    (label :text "TEM:") 
    (label :text temperature)))








;; vim:ft=yuck
